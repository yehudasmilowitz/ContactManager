{"version":3,"sources":["context.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/layout/Header.js","components/pages/About.js","components/test/Test.js","components/pages/NotFound.js","components/layout/TextInputGroup.js","components/contacts/AddContact.js","components/contacts/EditContact.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","Object","objectSpread","contacts","filter","contact","id","payload","concat","toConsumableArray","map","Provider","_Component","_getPrototypeOf2","_this","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","dispatch","setState","inherits","createClass","key","value","_componentDidMount","asyncToGenerator","regenerator_default","a","mark","_callee","res","wrap","_context","prev","next","axios","get","sent","data","stop","react_default","createElement","props","children","Component","Consumer","Contact","showContactInfo","onDeleteClick","delete","_this2","_this$props$contact","name","email","phone","className","onClick","style","cursor","float","color","bind","Link","to","marginRight","Contacts","Fragment","contacts_Contact","Header","branding","href","defaultProps","About","Test","title","body","console","log","fetch","then","response","json","_this$state","NotFound","TextInputGroup","_ref","label","placeholder","onChange","error","htmlFor","classnames","is-invalid","AddContact","errors","e","defineProperty","target","onSubmit","preventDefault","newContact","post","history","push","_this$state2","layout_TextInputGroup","EditContact","updContact","abrupt","match","params","put","App","context_Provider","HashRouter","layout_Header","Switch","Route","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.cd274a6d.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst Context = React.createContext();\r\n\r\nconst reducer = (state, action) => {\r\n    switch (action.type) {\r\n        case 'DELETE_CONTACT':\r\n            return {\r\n                ...state,\r\n                contacts: state.contacts.filter(contact => contact.id !== action.payload)\r\n            };\r\n        case 'ADD_CONTACT':\r\n            return {\r\n                ...state,\r\n                contacts: [action.payload, ...state.contacts]\r\n            };\r\n        case 'UPDATE_CONTACT':\r\n            return {\r\n                ...state,\r\n                contacts: state.contacts.map(contact => contact.id === action.payload.id ? (contact = action.payload) : contact)\r\n            }\r\n        default:\r\n            return state;\r\n\r\n    }\r\n}\r\n\r\nexport class Provider extends Component {\r\n    state = {\r\n        contacts: [\r\n\r\n        ],\r\n\r\n        dispatch: action =>\r\n            this.setState(state => reducer(state, action))\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const res = await axios.get(\"https://jsonplaceholder.typicode.com/users\");\r\n        this.setState({ contacts: res.data })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Context.Provider value={this.state}>\r\n                {this.props.children}\r\n            </Context.Provider>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport const Consumer = Context.Consumer;","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Consumer } from '../../context';\r\nimport axios from 'axios';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nclass Contact extends Component {\r\n  state = {\r\n    showContactInfo: false\r\n  }\r\n\r\n  onDeleteClick = async (id, dispatch) => {\r\n    await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`)\r\n    dispatch({\r\n      type: 'DELETE_CONTACT',\r\n      payload: id\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { id, name, email, phone } = this.props.contact;\r\n    const { showContactInfo } = this.state;\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card card-body mb-3\">\r\n              <h4>{name} <i\r\n                onClick={() => this.setState({ showContactInfo: !this.state.showContactInfo })}\r\n                className=\"fas fa-sort-down\"\r\n                style={{ cursor: \"pointer\" }}\r\n              />\r\n                <i className=\"fas fa-times\"\r\n                  style={{ float: \"right\", cursor: \"pointer\", color: \"red\" }}\r\n                  onClick={this.onDeleteClick.bind(this, id, dispatch)}></i>\r\n                <Link to={`contacts/edit/${id}`}>\r\n                  <i\r\n                    className=\"fas fa-pencil-alt\"\r\n                    style={{\r\n                      cursor: \"Pointer\",\r\n                      float: \"right\",\r\n                      color: \"black\",\r\n                      marginRight: \"1rem\"\r\n                    }}\r\n                  ></i></Link>\r\n              </h4>\r\n              {showContactInfo ? (\r\n                <ul className=\"list-group\">\r\n                  <li className=\"list-group-item\">Email: {email}</li>\r\n                  <li className=\"list-group-item\">Phone: {phone}</li>\r\n                </ul>) : null\r\n              }\r\n            </div>\r\n          )\r\n        }}\r\n      </Consumer>\r\n    )\r\n  }\r\n}\r\n\r\nContact.propTypes = {\r\n  contact: PropTypes.object.isRequired\r\n}\r\n\r\nexport default Contact;\r\n","import React, { Component } from 'react';\r\nimport Contact from './Contact';\r\nimport { Consumer } from '../../context';\r\n\r\nclass Contacts extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <Consumer>\r\n                {value => {\r\n                    const { contacts } = value;\r\n                    return (\r\n                        <React.Fragment>\r\n                            <h1 className=\"display-4 mb-2\">\r\n                                <span className=\"text-danger\">Contacts </span>List\r\n                            </h1>\r\n                            {contacts.map(contact =>\r\n                                <Contact\r\n                                    key={contact.id}\r\n                                    contact={contact}\r\n                                />\r\n                            )}\r\n                        </React.Fragment>\r\n                    )\r\n                }}\r\n            </Consumer>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default Contacts;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom'\r\n\r\n\r\nconst Header = (props) => {\r\n    const { branding } = props;\r\n    return (\r\n        <nav className=\"navbar navbar-expand-sm navbar-dark bg-danger mb-3 py-0\">\r\n            <div className=\"container\">\r\n                <a href=\"/\" className=\"navbar-brand\">\r\n                    {branding}\r\n                </a>\r\n                <div>\r\n                    <ul className=\"navbar-nav mr-auto\">\r\n                        <li className=\"nav-item\">\r\n                            <Link to=\"/\" className=\"nav-link\">\r\n                                <i className=\"fas fa-home\"></i> Home\r\n                            </Link>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <Link to=\"/contacts/add\" className=\"nav-link\">\r\n                                <i className=\"fas fa-plus\"></i> Add\r\n                            </Link>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <Link to=\"/about\" className=\"nav-link\">\r\n                                <i className=\"fas fa-question\"></i> About\r\n                        </Link>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nHeader.defaultProps = {\r\n    branding: \"My App\"\r\n}\r\n\r\nHeader.propTypes = {\r\n    branding: PropTypes.string.isRequired\r\n}\r\n\r\n\r\nexport default Header;\r\n","import React from 'react'\r\n\r\nconst About = () => {\r\n    return (\r\n        <div>\r\n            <h1 className=\"display-4\">About Contact Manager</h1>\r\n            <p className=\"lead\">A simple app to manage contacts</p>\r\n            <p className=\"text-secondary\">Version 1.0</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default About;\r\n","import React, { Component } from 'react'\r\n\r\nclass Test extends Component {\r\n    state = {\r\n        title: \"\",\r\n        body: \"\"\r\n    }\r\n\r\n    componentDidMount() {\r\n        console.log(\"component mounted\")\r\n        fetch('https://jsonplaceholder.typicode.com/posts/1')\r\n            .then(response => response.json())\r\n            .then(data => this.setState({\r\n                title: data.title,\r\n                body: data.body\r\n            }))\r\n    }\r\n\r\n    /* \r\n    componentWillMount() {\r\n        console.log(\"component will mount\")\r\n    }\r\n\r\n    componentWillUpdate() {\r\n        console.log(\"component will update\")\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        console.log(\"component updated\")\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps, nextState) {\r\n        console.log(\"componentWillReceiveProps\")\r\n    }\r\n\r\n    static getDerivedStateFromProps(nextProps, prevState) {\r\n        return {\r\n            test: 'something'\r\n        }\r\n    }\r\n\r\n    getSnapshotBeforeUpdate(prevProps, prevState) {\r\n        console.log(\"getSnapshotBeforeUpdate..\")\r\n    }\r\n\r\n    */\r\n\r\n    render() {\r\n        const { title, body } = this.state;\r\n        return (\r\n            <div>\r\n                <h1>{title}</h1>\r\n                <p>{body}</p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Test;\r\n","import React from 'react'\r\n\r\nexport default function NotFound() {\r\n    return (\r\n        <div>\r\n            <h1 className=\"display-4\"><span className=\"text-danger\">404</span> Page Not Found</h1>\r\n            <p className=\"lead\">Sorry this page doesn't exist.</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classnames from 'classnames';\r\n\r\n\r\nconst TextInputGroup = ({\r\n    label,\r\n    name,\r\n    value,\r\n    placeholder,\r\n    type,\r\n    onChange,\r\n    error\r\n}) => {\r\n    return (\r\n        <div>\r\n            <div className=\"form-group\">\r\n                <label htmlFor={name}>{label}</label>\r\n                <input type={type}\r\n                    className={classnames(\"form-control form-control-lg\",\r\n                        { 'is-invalid': error }\r\n                    )}\r\n                    placeholder={placeholder}\r\n                    name={name}\r\n                    value={value}\r\n                    onChange={onChange} />\r\n                {error && <div className=\"invalid-feedback\">{error}</div>}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nTextInputGroup.propTypes = {\r\n    label: PropTypes.string.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n    placeholder: PropTypes.string.isRequired,\r\n    value: PropTypes.string.isRequired,\r\n    type: PropTypes.string.isRequired,\r\n    onChange: PropTypes.func.isRequired,\r\n    error: PropTypes.string.isRequired\r\n}\r\n\r\nTextInputGroup.defaultProps = {\r\n    type: 'text',\r\n    error: ''\r\n}\r\n\r\nexport default TextInputGroup;\r\n","import React, { Component } from 'react';\r\nimport { Consumer } from '../../context';\r\nimport TextInputGroup from '../../components/layout/TextInputGroup';\r\n//import uuid from 'uuid';\r\nimport axios from 'axios';\r\n\r\nclass AddContact extends Component {\r\n    state = {\r\n        name: '',\r\n        email: '',\r\n        phone: '',\r\n        errors: {\r\n            name: '',\r\n            email: '',\r\n            phone: ''\r\n        }\r\n    }\r\n\r\n    onChange = e => this.setState({\r\n        [e.target.name]: e.target.value\r\n    });\r\n\r\n    onSubmit = (dispatch, e) => {\r\n        e.preventDefault();\r\n        const { name, email, phone } = this.state;\r\n\r\n        //Check for errors\r\n        if (name === '') {\r\n            this.setState({ errors: { name: 'Name is Required' } });\r\n            return;\r\n        }\r\n        if (email === '') {\r\n            this.setState({ errors: { email: 'Email is Required' } });\r\n            return;\r\n        }\r\n        if (phone === '') {\r\n            this.setState({ errors: { phone: 'Phone is Required' } });\r\n            return;\r\n        }\r\n\r\n        const newContact = {\r\n            //id: uuid(),\r\n            name,\r\n            email,\r\n            phone\r\n        }\r\n\r\n        axios.post('https://jsonplaceholder.typicode.com/users', newContact)\r\n            .then(res => dispatch(\r\n                {\r\n                    type: \"ADD_CONTACT\",\r\n                    payload: res.data\r\n                }\r\n            ))\r\n\r\n\r\n\r\n\r\n        //clear state\r\n        this.setState({\r\n            name: '',\r\n            email: '',\r\n            phone: '',\r\n            error: {}\r\n        })\r\n\r\n        this.props.history.push('/');\r\n    }\r\n\r\n    render() {\r\n        const { name, email, phone, errors } = this.state;\r\n\r\n        return (\r\n            <Consumer>\r\n                {value => {\r\n                    const { dispatch } = value;\r\n                    return (\r\n                        <div className=\"card mb-3\">\r\n                            <div className=\"card-header\">Add Contact</div>\r\n                            <div className=\"card-body\">\r\n                                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                                    <TextInputGroup\r\n                                        label=\"Name\"\r\n                                        name=\"name\"\r\n                                        placeholder=\"Enter Name\"\r\n                                        onChange={this.onChange}\r\n                                        value={name}\r\n                                        error={errors.name}\r\n                                    />\r\n                                    <TextInputGroup\r\n                                        label=\"Email\"\r\n                                        type=\"email\"\r\n                                        name=\"email\"\r\n                                        placeholder=\"Enter Email\"\r\n                                        onChange={this.onChange}\r\n                                        value={email}\r\n                                        error={errors.email}\r\n                                    />\r\n                                    <TextInputGroup\r\n                                        label=\"Phone\"\r\n                                        name=\"phone\"\r\n                                        placeholder=\"Enter Phone\"\r\n                                        onChange={this.onChange}\r\n                                        value={phone}\r\n                                        error={errors.phone}\r\n                                    />\r\n                                    <input type=\"submit\" value=\"Add Contact\" className=\"btn btn-light btn-block\" />\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                }}\r\n\r\n            </Consumer>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default AddContact;","import React, { Component } from 'react';\r\nimport { Consumer } from '../../context';\r\nimport TextInputGroup from '../../components/layout/TextInputGroup';\r\n//import uuid from 'uuid';\r\nimport axios from 'axios';\r\n\r\nclass EditContact extends Component {\r\n    state = {\r\n        name: '',\r\n        email: '',\r\n        phone: '',\r\n        errors: {\r\n            name: '',\r\n            email: '',\r\n            phone: ''\r\n        }\r\n    }\r\n\r\n    onChange = e => this.setState({\r\n        [e.target.name]: e.target.value\r\n    });\r\n\r\n    async componentDidMount() {\r\n        const { id } = this.props.match.params;\r\n        const res = await axios.get(`https://jsonplaceholder.typicode.com/users/${id}`);\r\n        const contact = res.data;\r\n        this.setState({\r\n            name: contact.name,\r\n            email: contact.email,\r\n            phone: contact.phone\r\n        })\r\n    }\r\n\r\n    onSubmit = async (dispatch, e) => {\r\n        e.preventDefault();\r\n        const { name, email, phone } = this.state;\r\n\r\n        //Check for errors\r\n        if (name === '') {\r\n            this.setState({ errors: { name: 'Name is Required' } });\r\n            return;\r\n        }\r\n        if (email === '') {\r\n            this.setState({ errors: { email: 'Email is Required' } });\r\n            return;\r\n        }\r\n        if (phone === '') {\r\n            this.setState({ errors: { phone: 'Phone is Required' } });\r\n            return;\r\n        }\r\n\r\n        const updContact = {\r\n            name,\r\n            email,\r\n            phone\r\n        }\r\n\r\n        const { id } = this.props.match.params;\r\n        const res = await axios.put(`https://jsonplaceholder.typicode.com/users/${id}`, updContact);\r\n        dispatch({\r\n            type: 'UPDATE_CONTACT',\r\n            payload: res.data\r\n        })\r\n\r\n        //clear state\r\n        this.setState({\r\n            name: '',\r\n            email: '',\r\n            phone: '',\r\n            error: {}\r\n        })\r\n\r\n        this.props.history.push('/');\r\n    }\r\n\r\n    render() {\r\n        const { name, email, phone, errors } = this.state;\r\n\r\n        return (\r\n            <Consumer>\r\n                {value => {\r\n                    const { dispatch } = value;\r\n                    return (\r\n                        <div className=\"card mb-3\">\r\n                            <div className=\"card-header\">Edit Contact</div>\r\n                            <div className=\"card-body\">\r\n                                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                                    <TextInputGroup\r\n                                        label=\"Name\"\r\n                                        name=\"name\"\r\n                                        placeholder=\"Enter Name\"\r\n                                        onChange={this.onChange}\r\n                                        value={name}\r\n                                        error={errors.name}\r\n                                    />\r\n                                    <TextInputGroup\r\n                                        label=\"Email\"\r\n                                        type=\"email\"\r\n                                        name=\"email\"\r\n                                        placeholder=\"Enter Email\"\r\n                                        onChange={this.onChange}\r\n                                        value={email}\r\n                                        error={errors.email}\r\n                                    />\r\n                                    <TextInputGroup\r\n                                        label=\"Phone\"\r\n                                        name=\"phone\"\r\n                                        placeholder=\"Enter Phone\"\r\n                                        onChange={this.onChange}\r\n                                        value={phone}\r\n                                        error={errors.phone}\r\n                                    />\r\n                                    <input type=\"submit\" value=\"Update Contact\" className=\"btn btn-light btn-block\" />\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                }}\r\n\r\n            </Consumer>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default EditContact;","import React, { Component } from 'react';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport Contacts from './components/contacts/Contacts';\nimport Header from './components/layout/Header';\nimport About from './components/pages/About';\n\nimport Test from './components/test/Test';\n\nimport NotFound from './components/pages/NotFound';\n\nimport AddContact from './components/contacts/AddContact';\nimport EditContact from './components/contacts/EditContact';\n\nimport { Provider } from './context';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider>\n        <Router>\n          <div className=\"App\">\n            <Header branding=\"Contact Manager\" />\n            <div className=\"container\">\n              <Switch>\n                <Route exact path=\"/\" component={Contacts} />\n                <Route exact path=\"/contacts/add\" component={AddContact} />\n                <Route exact path=\"/contacts/edit/:id\" component={EditContact} />\n                <Route exact path=\"/about\" component={About} />\n                <Route exact path=\"/test\" component={Test} />\n                <Route component={NotFound} />\n              </Switch>\n            </div>\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}